<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright Â© 2016 Cask Data, Inc.

  Licensed under the Apache License, Version 2.0 (the "License"); you may not
  use this file except in compliance with the License. You may obtain a copy of
  the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
  License for the specific language governing permissions and limitations under
  the License.
  -->
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>co.cask.hydrator</groupId>
  <artifactId>hydrator-plugins</artifactId>
  <version>1.2.0-SNAPSHOT</version>
  <modules>
    <module>hydrator-common</module>
    <module>hydrator-distributions</module>
    <module>core-plugins</module>
    <module>cassandra-plugins</module>
    <module>database-plugins</module>
    <module>elasticsearch-plugins</module>
    <module>hbase-plugins</module>
    <module>hdfs-plugins</module>
    <module>hive-plugins</module>
    <module>kafka-plugins</module>
    <module>mongodb-plugins</module>
    <module>python-evaluator-transform</module>
    <module>transform-plugins</module>
  </modules>
  <packaging>pom</packaging>

  <name>Hydrator Plugin Collection</name>

  <url>http://docs.cdap.io/cdap/current/en/included-applications/index.html</url>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
      <comments>A business-friendly OSS license</comments>
    </license>
  </licenses>

  <issueManagement>
    <url>https://issues.cask.co/browse/CDAP</url>
  </issueManagement>

  <properties>
    <surefire.redirectTestOutputToFile>true</surefire.redirectTestOutputToFile>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <!-- version properties -->
    <apache-commons.version>1.2</apache-commons.version>
    <asm.version>5.0.3</asm.version>
    <avro.version>1.7.7</avro.version>
    <cassandra.version>2.1.0</cassandra.version>
    <cassandraunit.version>2.0.2.2</cassandraunit.version>
    <commons-codec.version>1.10</commons-codec.version>
    <commons-httpclient.version>3.1</commons-httpclient.version>
    <cdap.version>3.3.0-SNAPSHOT</cdap.version>
    <datastax.version>2.0.5</datastax.version>
    <es.version>1.6.0</es.version>
    <es-hadoop.version>2.1.0</es-hadoop.version>
    <fastutil.version>6.6.1</fastutil.version>
    <geronimo-jms.version>1.1.1</geronimo-jms.version>
    <hadoop.version>2.3.0</hadoop.version>
    <hsql.version>2.2.4</hsql.version>
    <hive.version>1.1.0-cdh5.4.5</hive.version>
    <junit.version>4.11</junit.version>
    <kafka.version>0.8.2.2</kafka.version>
    <snappy.version>1.1.2</snappy.version>
    <slf4j.version>1.7.5</slf4j.version>
    <twill.version>0.6.0-incubating</twill.version>
    <twitter4j.version>4.0.3</twitter4j.version>
    <zookeeper.version>3.4.5</zookeeper.version>
    <!-- properties for script build step that creates the config files for the artifacts -->
    <widgets.dir>widgets</widgets.dir>
    <docs.dir>docs</docs.dir>
    <etl.versionRange>[3.3.0-SNAPSHOT,3.4.0-SNAPSHOT)</etl.versionRange>
    <!-- this is here because project.basedir evaluates to null in the script build step -->
    <main.basedir>${project.basedir}</main.basedir>
    <release.iteration>1</release.iteration>
  </properties>



  <repositories>
    <repository>
      <id>sonatype</id>
      <url>https://oss.sonatype.org/content/groups/public</url>
    </repository>
    <repository>
      <id>sonatype-snapshots</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </repository>
  </repositories>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.annotation</groupId>
        <artifactId>jsr250-api</artifactId>
        <version>1.0</version>
      </dependency>
      <dependency>
        <groupId>co.cask.cdap</groupId>
        <artifactId>cdap-etl-api</artifactId>
        <version>${cdap.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>co.cask.cdap</groupId>
        <artifactId>cdap-formats</artifactId>
        <version>${cdap.version}</version>
      </dependency>
      <dependency>
        <groupId>co.cask.cdap</groupId>
        <artifactId>cdap-etl-batch</artifactId>
        <version>${cdap.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>co.cask.cdap</groupId>
        <artifactId>cdap-etl-core</artifactId>
        <version>${cdap.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>co.cask.cdap</groupId>
        <artifactId>cdap-proto</artifactId>
        <version>${cdap.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>co.cask.cdap</groupId>
        <artifactId>cdap-etl-realtime</artifactId>
        <version>${cdap.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>co.cask.cdap</groupId>
        <artifactId>cdap-test</artifactId>
        <version>${cdap.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>co.cask.cdap</groupId>
        <artifactId>cdap-unit-test</artifactId>
        <version>${cdap.version}</version>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <groupId>asm</groupId>
            <artifactId>asm</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-minicluster</artifactId>
        <version>${hadoop.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-common</artifactId>
        <version>${hadoop.version}</version>
        <scope>provided</scope>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
          <exclusion>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.zookeeper</groupId>
            <artifactId>zookeeper</artifactId>
          </exclusion>
          <exclusion>
            <artifactId>guava</artifactId>
            <groupId>com.google.guava</groupId>
          </exclusion>
          <exclusion>
            <artifactId>jersey-core</artifactId>
            <groupId>com.sun.jersey</groupId>
          </exclusion>
          <exclusion>
            <artifactId>jersey-json</artifactId>
            <groupId>com.sun.jersey</groupId>
          </exclusion>
          <exclusion>
            <artifactId>jersey-server</artifactId>
            <groupId>com.sun.jersey</groupId>
          </exclusion>
          <exclusion>
            <artifactId>servlet-api</artifactId>
            <groupId>javax.servlet</groupId>
          </exclusion>
          <exclusion>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty-util</artifactId>
          </exclusion>
          <exclusion>
            <artifactId>jasper-compiler</artifactId>
            <groupId>tomcat</groupId>
          </exclusion>
          <exclusion>
            <artifactId>jasper-runtime</artifactId>
            <groupId>tomcat</groupId>
          </exclusion>
          <exclusion>
            <artifactId>jsp-api</artifactId>
            <groupId>javax.servlet.jsp</groupId>
          </exclusion>
          <exclusion>
            <artifactId>slf4j-api</artifactId>
            <groupId>org.slf4j</groupId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-mapreduce-client-core</artifactId>
        <version>${hadoop.version}</version>
        <scope>provided</scope>
        <exclusions>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.google.inject.extensions</groupId>
            <artifactId>guice-servlet</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-core</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-server</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-json</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.sun.jersey.contribs</groupId>
            <artifactId>jersey-guice</artifactId>
          </exclusion>
          <exclusion>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.cassandra</groupId>
        <artifactId>cassandra-all</artifactId>
        <version>${cassandra.version}</version>
      </dependency>
      <dependency>
        <groupId>org.xerial.snappy</groupId>
        <artifactId>snappy-java</artifactId>
        <version>${snappy.version}</version>
      </dependency>
      <dependency>
        <groupId>org.cassandraunit</groupId>
        <artifactId>cassandra-unit</artifactId>
        <version>${cassandraunit.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.datastax.cassandra</groupId>
        <artifactId>cassandra-driver-core</artifactId>
        <version>${datastax.version}</version>
      </dependency>
      <dependency>
        <groupId>org.twitter4j</groupId>
        <artifactId>twitter4j-core</artifactId>
        <version>${twitter4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.twitter4j</groupId>
        <artifactId>twitter4j-stream</artifactId>
        <version>${twitter4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.hsqldb</groupId>
        <artifactId>hsqldb</artifactId>
        <version>${hsql.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.elasticsearch</groupId>
        <artifactId>elasticsearch</artifactId>
        <version>${es.version}</version>
        <exclusions>
          <exclusion>
            <groupId>log4j</groupId>
            <artifactId>*</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.ow2.asm</groupId>
            <artifactId>*</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-common</artifactId>
        <version>${hadoop.version}</version>
        <type>test-jar</type>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.google.inject.extensions</groupId>
            <artifactId>guice-servlet</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-core</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-server</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-json</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.sun.jersey.contribs</groupId>
            <artifactId>jersey-guice</artifactId>
          </exclusion>
          <exclusion>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.elasticsearch</groupId>
        <artifactId>elasticsearch-hadoop-mr</artifactId>
        <version>${es-hadoop.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-httpclient</groupId>
        <artifactId>commons-httpclient</artifactId>
        <version>${commons-httpclient.version}</version>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.avro</groupId>
        <artifactId>avro</artifactId>
        <version>${avro.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.avro</groupId>
        <artifactId>avro-mapred</artifactId>
        <classifier>hadoop2</classifier>
        <version>${avro.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.geronimo.specs</groupId>
        <artifactId>geronimo-jms_1.1_spec</artifactId>
        <version>${geronimo-jms.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.zookeeper</groupId>
        <artifactId>zookeeper</artifactId>
        <version>${zookeeper.version}</version>
        <scope>provided</scope>
        <exclusions>
          <exclusion>
            <artifactId>slf4j-api</artifactId>
            <groupId>org.slf4j</groupId>
          </exclusion>
          <exclusion>
            <artifactId>slf4j-log4j12</artifactId>
            <groupId>org.slf4j</groupId>
          </exclusion>
          <exclusion>
            <artifactId>log4j</artifactId>
            <groupId>log4j</groupId>
          </exclusion>
          <exclusion>
            <artifactId>junit</artifactId>
            <groupId>junit</groupId>
          </exclusion>
          <exclusion>
            <groupId>org.jboss.netty</groupId>
            <artifactId>netty</artifactId>
          </exclusion>
          <exclusion>
            <groupId>jline</groupId>
            <artifactId>jline</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.twill</groupId>
        <artifactId>twill-core</artifactId>
        <version>${twill.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-compiler</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.kafka</groupId>
        <artifactId>kafka_2.10</artifactId>
        <version>${kafka.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.sun.jdmk</groupId>
            <artifactId>jmxtools</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.sun.jmx</groupId>
            <artifactId>jmxri</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-compiler</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.ow2.asm</groupId>
        <artifactId>asm-all</artifactId>
        <version>${asm.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <source>1.7</source>
          <target>1.7</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.14.1</version>
        <configuration>
          <argLine>-Xmx5000m -Djava.awt.headless=true -XX:MaxPermSize=1024m -XX:+UseConcMarkSweepGC -XX:OnOutOfMemoryError="kill -9 %p" -Djava.net.preferIPv4Stack=true</argLine>
          <redirectTestOutputToFile>${surefire.redirectTestOutputToFile}</redirectTestOutputToFile>
          <reuseForks>false</reuseForks>
          <reportFormat>plain</reportFormat>
          <systemPropertyVariables>
            <java.io.tmpdir>${project.build.directory}</java.io.tmpdir>
          </systemPropertyVariables>
          <includes>
            <include>**/*TestsSuite.java</include>
            <include>**/*TestSuite.java</include>
            <include>**/Test*.java</include>
            <include>**/*Test.java</include>
            <include>**/*TestCase.java</include>
          </includes>
          <excludes>
            <exclude>**/*TestRun.java</exclude>
          </excludes>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.apache.maven.surefire</groupId>
            <artifactId>surefire-junit47</artifactId>
            <version>2.14</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.apache.rat</groupId>
        <artifactId>apache-rat-plugin</artifactId>
        <version>0.10</version>
        <dependencies>
          <dependency>
            <groupId>org.apache.maven.doxia</groupId>
            <artifactId>doxia-core</artifactId>
            <version>1.6</version>
            <exclusions>
              <exclusion>
                <groupId>xerces</groupId>
                <artifactId>xercesImpl</artifactId>
              </exclusion>
            </exclusions>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>rat-check</id>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <excludes>
                <exclude>LICENSE*.txt</exclude>
                <!-- This file should be not be there, but I am excluding it for now -->
                <exclude>*.rst</exclude>
                <exclude>*.md</exclude>
                <exclude>**/*.cdap</exclude>
                <exclude>**/*.yaml</exclude>
                <exclude>**/*.md</exclude>
                <exclude>logs/**</exclude>
                <exclude>.git/**</exclude>
                <exclude>.idea/**</exclude>
                <exclude>**/grok/patterns/**</exclude>
                <exclude>conf/**</exclude>
                <exclude>data/**</exclude>
                <exclude>plugins/**</exclude>
                <exlcude>**/*.patch</exlcude>
                <exlcude>**/VERSION</exlcude>
                <exclude>**/logrotate.d/**</exclude>
                <exclude>**/limits.d/**</exclude>
                <exclude>**/*.json</exclude>
                <exclude>**/*.json.template</exclude>
                <exclude>**/MANIFEST.MF</exclude>
              </excludes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>2.12.1</version>
        <executions>
          <execution>
            <id>validate</id>
            <phase>process-test-classes</phase>
            <configuration>
              <configLocation>checkstyle.xml</configLocation>
              <suppressionsLocation>suppressions.xml</suppressionsLocation>
              <encoding>UTF-8</encoding>
              <consoleOutput>true</consoleOutput>
              <failsOnError>true</failsOnError>
              <includeTestSourceDirectory>true</includeTestSourceDirectory>
              <excludes>**/org/apache/cassandra/**</excludes>
            </configuration>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <!-- Create the config file for artifact which can be used to deploy the artifact.
               Sets the parents field to system:cdap-etl-batch and system:cdap-etl-realtime with whatever
               version range is set in the etl.versionRange property.
               also sets a widget and doc property for each file contained in the widgets and docs directories. -->
          <execution>
            <id>create-artifact-config</id>
            <phase>prepare-package</phase>
            <configuration>
              <target>
                <script language="javascript"> <![CDATA[

                  // for some reason, project.basedir evaluates to null if we just get the property here.
                  // so we set main.basedir to project.basedir in the pom properties, then main.basedir is used here
                  // where it evaluates correctly for whatever reason
                  var baseDir = project.getProperty("main.basedir");
                  var targetDir = project.getProperty("project.build.directory");
                  var artifactId = project.getProperty("project.artifactId");
                  var version = project.getProperty("project.version");

                  var cfgFile = new java.io.File(targetDir, artifactId + "-" + version + ".json");
                  if (!cfgFile.exists()) {
                    cfgFile.createNewFile();
                  }

                  var etlRange = project.getProperty("etl.versionRange");
                  var config = {
                    "parents": [ "system:cdap-etl-batch" + etlRange, "system:cdap-etl-realtime" + etlRange ],
                    "properties": {}
                  }

                  // look in widgets directory for widget config for each plugin
                  var widgetsDir = new java.io.File(baseDir, project.getProperty("widgets.dir"));
                  if (widgetsDir.isDirectory()) {
                    var widgetsFiles = widgetsDir.listFiles();
                    for (i = 0; i < widgetsFiles.length; i++) {
                      var widgetsFile = widgetsFiles[i];
                      if (widgetsFile.isFile()) {
                        var propertyName = "widgets." + widgetsFile.getName();
                        // if the filename ends with .json
                        if (propertyName.indexOf(".json", propertyName.length - 5) !== -1) {
                          // strip the .json
                          propertyName = propertyName.slice(0, -5);
                          var contents = new java.lang.String(java.nio.file.Files.readAllBytes(widgetsFile.toPath()), java.nio.charset.StandardCharsets.UTF_8);
                          var contentsAsJson = JSON.parse(contents);
                          config.properties[propertyName] = JSON.stringify(contentsAsJson);
                        }
                      }
                    }
                  }

                  // look in the docs directory for docs for each plugin
                  var docsDir = new java.io.File(baseDir, project.getProperty("docs.dir"));
                  if (docsDir.isDirectory()) {
                    var docFiles = docsDir.listFiles();
                    for (i = 0; i < docFiles.length; i++) {
                      var docFile = docFiles[i];
                      if (docFile.isFile()) {
                        var propertyName = "doc." + docFile.getName();
                        // if the filename ends with .md
                        if (propertyName.indexOf(".md", propertyName.length - 3) !== -1) {
                          // strip the extension
                          propertyName = propertyName.slice(0, -3);
                          var contents = new java.lang.String(java.nio.file.Files.readAllBytes(docFile.toPath()), java.nio.charset.StandardCharsets.UTF_8);
                          config.properties[propertyName] = contents + "";
                        }
                      }
                    }
                  }

                  var fw = new java.io.BufferedWriter(new java.io.FileWriter(cfgFile.getAbsoluteFile()));
                  fw.write(JSON.stringify(config, null, 2));
                  fw.close();
                ]]></script>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>dist</id>
      <properties>
        <stage.dir>${project.build.directory}/stage-packaging</stage.dir>
        <stage.opt.dir>${stage.dir}/opt/cdap/${package.name}</stage.opt.dir>
        <stage.lib.dir>${stage.opt.dir}/lib</stage.lib.dir>
        <stage.plugins.dir>${stage.opt.dir}/plugins</stage.plugins.dir>
        <package.depends>--depends cdap</package.depends>
        <package.dirs>opt</package.dirs>
      </properties>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-jar-plugin</artifactId>
              <version>2.4</version>
              <executions>
                <execution>
                  <id>jar</id>
                  <phase>prepare-package</phase>
                  <configuration>
                    <outputDirectory>${stage.lib.dir}</outputDirectory>
                    <finalName>${project.groupId}.${project.build.finalName}</finalName>
                  </configuration>
                  <goals>
                    <goal>jar</goal>
                  </goals>
                </execution>
              </executions>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-dependency-plugin</artifactId>
              <version>2.8</version>
              <executions>
                <execution>
                  <id>copy-dependencies</id>
                  <phase>prepare-package</phase>
                  <goals>
                    <goal>copy-dependencies</goal>
                  </goals>
                  <configuration>
                    <outputDirectory>${stage.lib.dir}</outputDirectory>
                    <overWriteReleases>false</overWriteReleases>
                    <overWriteSnapshots>false</overWriteSnapshots>
                    <overWriteIfNewer>true</overWriteIfNewer>
                    <excludeGroupIds>org.apache.hadoop,org.apache.hbase,org.apache.hive,com.google.protobuf,\
                      org.datanucleus,asm,org.apache.spark,slf4j-log4j12,org.codehaus.jackson</excludeGroupIds>
                    <excludeArtifactIds>hive-exec</excludeArtifactIds>
                    <prependGroupId>true</prependGroupId>
                    <silent>true</silent>
                    <includeScope>runtime</includeScope>
                  </configuration>
                </execution>
              </executions>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-resources-plugin</artifactId>
              <version>2.6</version>
              <executions>
                <execution>
                  <id>copy-opt</id>
                  <phase>process-resources</phase>
                  <goals>
                    <goal>copy-resources</goal>
                  </goals>
                  <configuration>
                    <outputDirectory>${stage.opt.dir}</outputDirectory>
                    <resources>
                      <resource>
                        <directory>${project.parent.basedir}/hydrator-distributions</directory>
                        <includes>
                          <include>VERSION</include>
                        </includes>
                        <filtering>true</filtering>
                      </resource>
                      <resource>
                        <directory>${project.parent.basedir}/hydrator-distributions/src</directory>
                        <includes>
                          <include>LICENSE-2.0.txt</include>
                        </includes>
                      </resource>
                      <resource>
                        <directory>bin</directory>
                        <targetPath>bin</targetPath>
                        <excludes>
                          <exclude>node</exclude>
                        </excludes>
                      </resource>
                      <resource>
                        <directory>conf</directory>
                        <targetPath>conf</targetPath>
                      </resource>
                    </resources>
                  </configuration>
                </execution>
              </executions>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-antrun-plugin</artifactId>
              <version>1.7</version>
              <executions>
                <!--This is for workaround a bug in resource-plugin that it doesn't preserve file permission-->
                <!--http://jira.codehaus.org/browse/MRESOURCES-132-->
                <!--<execution>-->
                  <!--<id>bin-permission</id>-->
                  <!--<phase>prepare-package</phase>-->
                  <!--<configuration>-->
                    <!--<failOnError>false</failOnError>-->
                    <!--<target>-->
                      <!--<chmod file="${stage.opt.dir}/bin/**" perm="755"/>-->
                    <!--</target>-->
                  <!--</configuration>-->
                  <!--<goals>-->
                    <!--<goal>run</goal>-->
                  <!--</goals>-->
                <!--</execution>-->
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>

        <!-- Generate the package version. If it has -SNAPSHOT, replace it with build time. -->
        <plugins>
          <!-- Generate a timestamp property -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>buildnumber-maven-plugin</artifactId>
            <version>1.3</version>
            <executions>
              <execution>
                <id>create-timestamp</id>
                <phase>validate</phase>
                <goals>
                  <goal>create-timestamp</goal>
                </goals>
                <configuration>
                  <timestampPropertyName>package.build.timestamp</timestampPropertyName>
                </configuration>
              </execution>
              <execution>
                <id>create-year</id>
                <phase>validate</phase>
                <goals>
                  <goal>create-timestamp</goal>
                </goals>
                <configuration>
                  <timestampPropertyName>package.build.year</timestampPropertyName>
                  <timestampFormat>yyyy</timestampFormat>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- Generate the package.version property -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <version>1.9</version>
            <executions>
              <execution>
                <id>regex-properties</id>
                <phase>validate</phase>
                <goals>
                  <goal>regex-properties</goal>
                </goals>
                <configuration>
                  <regexPropertySettings>
                    <regexPropertySetting>
                      <name>package.name</name>
                      <value>${project.artifactId}</value>
                      <regex>cdap-</regex>
                      <replacement></replacement>
                      <failIfNoMatch>false</failIfNoMatch>
                    </regexPropertySetting>
                    <regexPropertySetting>
                      <name>package.version</name>
                      <value>${project.version}</value>
                      <regex>-SNAPSHOT</regex>
                      <replacement>.${package.build.timestamp}</replacement>
                      <failIfNoMatch>false</failIfNoMatch>
                    </regexPropertySetting>
                  </regexPropertySettings>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- Determine the deploy.url for non-standard (e.g. zip, rpm, deb) deployment -->
          <plugin>
            <groupId>org.codehaus.gmaven</groupId>
            <artifactId>gmaven-plugin</artifactId>
            <version>1.5</version>
            <dependencies>
              <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy-all</artifactId>
                <version>1.5.8</version>
              </dependency>
            </dependencies>
            <executions>
              <execution>
                <id>choose-deploy-url</id>
                <phase>initialize</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <source>
                    if (project.version.endsWith("-SNAPSHOT")){
//                      project.properties['deploy.url'] = project.properties['cask.packages.snapshot.repo'];
//                      project.properties['dist.deploy.groupId'] = "co.cask.cdap.distributions.snapshots";
                    } else {
//                      project.properties['deploy.url'] = project.properties['cask.packages.release.repo'];
//                      project.properties['dist.deploy.groupId'] = "co.cask.cdap.distributions.release";
                    }
                  </source>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- Profile for prepare rpm package. The "dist" profile must be activated as well. -->
    <profile>
      <id>rpm-prepare</id>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-resources-plugin</artifactId>
              <version>2.6</version>
              <executions>
                <execution>
                  <id>copy-rpm-scripts</id>
                  <phase>process-resources</phase>
                  <goals>
                    <goal>copy-resources</goal>
                  </goals>
                  <configuration>
                    <outputDirectory>${project.build.directory}/dist/rpm</outputDirectory>
                    <!-- Copy it twice, one with filter, one without -->
                    <resources>
                      <resource>
                        <directory>${project.parent.basedir}/hydrator-distributions/src/rpm/init.d</directory>
                        <targetPath>unfilter</targetPath>
                      </resource>
                      <resource>
                        <directory>${project.parent.basedir}/hydrator-distributions/src/rpm/init.d</directory>
                        <filtering>true</filtering>
                      </resource>
                    </resources>
                  </configuration>
                </execution>
              </executions>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-antrun-plugin</artifactId>
              <version>1.7</version>
              <executions>
                <!--This is for workaround a bug in resource-plugin that it doesn't preserve file permission-->
                <!--http://jira.codehaus.org/browse/MRESOURCES-132-->
                <!--<execution>-->
                  <!--<id>rpm-init-permission</id>-->
                  <!--<phase>prepare-package</phase>-->
                  <!--<configuration>-->
                    <!--<target>-->
                      <!--<chmod file="${stage.dir}/etc/rc.d/init.d/**" perm="755"/>-->
                    <!--</target>-->
                  <!--</configuration>-->
                  <!--<goals>-->
                    <!--<goal>run</goal>-->
                  <!--</goals>-->
                <!--</execution>-->
                <!--<execution>-->
                  <!--<id>rpm-bin-permission</id>-->
                  <!--<phase>prepare-package</phase>-->
                  <!--<configuration>-->
                    <!--<target>-->
                      <!--<chmod file="${stage.opt.dir}/bin/**" perm="755"/>-->
                    <!--</target>-->
                  <!--</configuration>-->
                  <!--<goals>-->
                    <!--<goal>run</goal>-->
                  <!--</goals>-->
                <!--</execution>-->
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>

    <!-- Profile for prepare debian package. The "dist" profile must be activated as well. -->
    <profile>
      <id>deb-prepare</id>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-resources-plugin</artifactId>
              <version>2.6</version>
              <executions>
                <execution>
                  <id>copy-deb-staging</id>
                  <phase>prepare-package</phase>
                  <goals>
                    <goal>copy-resources</goal>
                  </goals>
                  <configuration>
                    <outputDirectory>${stage.dir}-deb</outputDirectory>
                    <resources>
                      <resource>
                        <directory>${stage.dir}</directory>
                        <includes>
                          <include>opt/**</include>
                        </includes>
                      </resource>
                    </resources>
                  </configuration>
                </execution>
                <execution>
                  <id>copy-deb-scripts</id>
                  <phase>process-resources</phase>
                  <goals>
                    <goal>copy-resources</goal>
                  </goals>
                  <configuration>
                    <outputDirectory>${project.build.directory}/dist/deb</outputDirectory>
                    <resources>
                      <!-- Copy it twice, one with filter, one without -->
                      <resource>
                        <directory>${project.parent.basedir}/hydrator-distributions/src/debian/init.d</directory>
                        <targetPath>unfilter</targetPath>
                      </resource>
                      <resource>
                        <directory>${project.parent.basedir}/hydrator-distributions/src/debian/init.d</directory>
                        <filtering>true</filtering>
                      </resource>
                    </resources>
                  </configuration>
                </execution>
              </executions>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-antrun-plugin</artifactId>
              <version>1.7</version>
              <executions>
                <!--This is for workaround a bug in resource-plugin that it doesn't preserve file permission-->
                <!--http://jira.codehaus.org/browse/MRESOURCES-132-->
                <!--<execution>-->
                  <!--<id>deb-init-permission</id>-->
                  <!--<phase>prepare-package</phase>-->
                  <!--<configuration>-->
                    <!--<target>-->
                      <!--<chmod file="${stage.dir}-deb/etc/init.d/**" perm="755"/>-->
                    <!--</target>-->
                  <!--</configuration>-->
                  <!--<goals>-->
                    <!--<goal>run</goal>-->
                  <!--</goals>-->
                <!--</execution>-->
                <!--<execution>-->
                  <!--<id>deb-bin-permission</id>-->
                  <!--<phase>prepare-package</phase>-->
                  <!--<configuration>-->
                    <!--<target>-->
                      <!--<chmod file="${stage.dir}-deb/opt/cdap/${package.name}/bin/**" perm="755"/>-->
                    <!--</target>-->
                  <!--</configuration>-->
                  <!--<goals>-->
                    <!--<goal>run</goal>-->
                  <!--</goals>-->
                <!--</execution>-->
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>

    <!-- Profile for creating RPM package. Both "dist" and "rpm-prepare" must be activated. -->
    <profile>
      <id>rpm</id>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>exec-maven-plugin</artifactId>
              <version>1.3.1</version>
              <executions>
                <execution>
                  <id>rpm-package</id>
                  <phase>package</phase>
                  <goals>
                    <goal>exec</goal>
                  </goals>
                  <configuration>
                    <workingDirectory>${project.build.directory}</workingDirectory>
                    <executable>fpm</executable>
                    <commandlineArgs>
                      --name "cdap-${package.name}"
                      --vendor "Cask Data, Inc."
                      --maintainer "support@cask.co"
                      --license "Copyright Â© ${package.build.year} Cask Data, Inc. Licensed under the Apache License, Version 2.0."
                      --description "Cask DAP (CDAP) Component: ${package.name}"
                      --category misc
                      -s dir
                      -t rpm
                      -C "${stage.dir}"
                      --directories "/opt/cdap/${package.name}"
                      --version "${package.version}"
                      --architecture all
                      --rpm-os linux
                      --url "http://cask.co"
                      --template-value "project=${package.name}"
                      --after-install "${project.parent.basedir}/hydrator-distributions/src/rpm/scripts/postinst"
                      --before-remove "${project.parent.basedir}/hydrator-distributions/src/rpm/scripts/prerm"
                      --after-remove "${project.parent.basedir}/hydrator-distributions/src/rpm/scripts/postrm"
                      --iteration "${release.iteration}"
                      --depends libxml2
                      ${package.depends}
                      ${package.dirs}
                    </commandlineArgs>
                  </configuration>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>

    <!-- Profile for creating Debian package. Both "dist" and "deb-prepare" must be activated. -->
    <profile>
      <id>deb</id>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>exec-maven-plugin</artifactId>
              <version>1.3.1</version>
              <executions>
                <execution>
                  <id>deb-package</id>
                  <phase>package</phase>
                  <goals>
                    <goal>exec</goal>
                  </goals>
                  <configuration>
                    <workingDirectory>${project.build.directory}</workingDirectory>
                    <executable>fpm</executable>
                    <commandlineArgs>
                      --name "cdap-${package.name}"
                      --vendor "Cask Data, Inc."
                      --maintainer "support@cask.co"
                      --license "Copyright Â© ${package.build.year} Cask Data, Inc. Licensed under the Apache License, Version 2.0."
                      --description "Cask DAP (CDAP) Component: ${package.name}"
                      --category misc
                      -s dir
                      -t deb
                      -C "${stage.dir}-deb"
                      --directories "/opt/cdap/${package.name}"
                      --version "${package.version}"
                      --architecture all
                      --url "http://cask.co"
                      --template-value "project=${package.name}"
                      --after-install "${project.parent.basedir}/hydrator-distributions/src/debian/scripts/postinst"
                      --before-remove "${project.parent.basedir}/hydrator-distributions/src/debian/scripts/prerm"
                      --after-remove "${project.parent.basedir}/hydrator-distributions/src/debian/scripts/postrm"
                      --iteration "${release.iteration}"
                      --depends libxml2-utils
                      ${package.depends}
                      ${package.dirs}
                    </commandlineArgs>
                  </configuration>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>

    <!-- For generating tar.gz. Requires "dist" profile being activated. -->
    <profile>
      <id>tgz</id>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-assembly-plugin</artifactId>
              <version>2.4</version>
              <executions>
                <execution>
                  <id>tgz-package</id>
                  <phase>package</phase>
                  <goals>
                    <goal>single</goal>
                  </goals>
                  <configuration>
                    <descriptors>
                      <descriptor>${project.parent.basedir}/hydrator-distributions/src/main/assembly/tgz.xml</descriptor>
                    </descriptors>
                    <appendAssemblyId>false</appendAssemblyId>
                    <attach>false</attach>
                    <finalName>${project.artifactId}-${package.version}</finalName>
                  </configuration>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
  </profiles>
</project>
